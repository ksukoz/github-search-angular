{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/github/github.component.css","webpack:///./src/app/components/github/github.component.html","webpack:///./src/app/components/github/github.component.ts","webpack:///./src/app/services/github.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">GitHub Search</a>\\n  </nav>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 mx-auto\\\">\\n      <app-github></app-github>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GithubComponent } from './components/github/github.component';\n\nimport { GithubService } from './services/github.service';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GithubComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [GithubService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"GitHub Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" (keyup)=\\\"search()\\\">\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"user; else noUser\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h3>{{user.name}}</h3>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <img class=\\\"img-fluid\\\" src=\\\"{{user.avatar_url}}\\\" alt=\\\"{{user.name}}\\\">\\n        </div>\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"stats\\\">\\n            <span>\\n              <span class=\\\"badge badge-dark\\\">{{user.public_repos}}</span> Public Repos\\n            </span>\\n            <span>\\n              <span class=\\\"badge badge-dark\\\">{{user.public_gists}}</span> Public Gists\\n            </span>\\n            <span>\\n              <span class=\\\"badge badge-dark\\\">{{user.followers}}</span> Followers\\n            </span>\\n            <span>\\n              <span class=\\\"badge badge-dark\\\">{{user.following}}</span> Following\\n            </span>\\n\\n          </div>\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\"><strong>Username: </strong> {{user.login}}</li>\\n            <li class=\\\"list-group-item\\\"><strong>Location: </strong> {{user.location}}</li>\\n            <li class=\\\"list-group-item\\\"><strong>Email: </strong> {{user.email}}</li>\\n            <li class=\\\"list-group-item\\\"><strong>Blog: </strong> {{user.blog}}</li>\\n            <li class=\\\"list-group-item\\\"><strong>Member Since: </strong> {{user.created_at}}</li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3>{{user.name}}'s Repos</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <div *ngFor=\\\"let repo of repos\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-9\\\">\\n                  <h4><a href=\\\"{{repo.html_url}}\\\" target=\\\"_blank\\\">{{repo.name}}</a></h4>\\n                  <p>{{repo.description}}</p>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <span class=\\\"badge badge-primary\\\">{{repo.watchers}} Watchers</span> \\n                    <span class=\\\"badge badge-success\\\">{{repo.forks}} Forks</span> \\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\\n<ng-template #noUser>Please enter username</ng-template>\"","import { Component, OnInit } from '@angular/core';\n\nimport { GithubService } from '../../services/github.service';\nimport 'rxjs';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.css']\n})\nexport class GithubComponent implements OnInit {\n  user:any;\n  repos:any;\n  username:string;\n\n  constructor(private githubService: GithubService) { \n    this.user = false;\n  }\n\n  search() {\n    this.githubService.updateUsername(this.username);\n    this.githubService.getUser().subscribe(user => this.user = user);\n    this.githubService.getRepos().subscribe(repos => this.repos = repos);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n  private username:string = 'bradtraversy'\n\n  constructor(private http: HttpClient) { }\n\n  getUser() {\n    return this.http.get('//api.github.com/users/' + this.username)\n      .pipe(map(res=> res))\n  }\n\n  getRepos() {\n    return this.http.get('//api.github.com/users/' + this.username + '/repos')\n      .pipe(map(res=> res))\n  }\n\n  updateUsername(username) {\n    this.username = username;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}